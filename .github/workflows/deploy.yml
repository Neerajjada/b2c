name: nbrs-dit-deploy-new-b2cpolicies-bulk

on:
  workflow_dispatch:
    inputs:
      policy_file:
        description: 'Enter the policy files to add, separated by commas'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: nbrs-dit

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Validate Policy Files
      run: |
        echo "Validating encoding and content of policy files..."
        find policies -type f -name "*.xml" -exec bash -c 'file -i "$1" | grep -q "utf-8" || echo "Encoding issue in: $1"' _ {} \; && \
        grep --color='auto' -P -n "[^\x00-\x7F]" policies/*.xml || echo "Validation complete."

    - name: Fix Encoding and Clean Policy Files
      run: |
        echo "Fixing encoding and cleaning up problematic characters..."
        find policies -type f -name "*.xml" -exec iconv -f UTF-8 -t UTF-8 "{}" -o "{}.utf8" \; -exec mv "{}.utf8" "{}" \; \
        -exec sed -i "s/’/'/g; s/“/\"/g; s/”/\"/g; s/\u2009/ /g; s/\xe9/e/g; s/\xe8/e/g; s/\xe0/a/g; s/\xe7/c/g;" {} +

    - name: Replace Variables in Policy Files
      run: |
        mkdir -p build
        # Normalize line endings in dit.config for compatibility
        sed -i 's/\r//' configuration/dev.config
        # Replace variables in XML files located in the 'Policies' folder
        while IFS= read -r line || [ -n "$line" ]; do
        if [[ "$line" != *:* ]]; then
        continue
        fi
        IFS=':' read -r key value <<< "$line"
        key=$(echo "$key" | xargs)
        value=$(echo "$value" | xargs)
        echo "Replacing {{$key}} with $value in all policy files..."
        
        find policies -type f -name "*.xml" -exec sed -i "s|{{$key}}|$value|g" {} \;
        done < configuration/dev.config

    - name: Copy Specified Policy File to Temp
      run: |
        mkdir -p build
          # Split the comma-separated policy files and copy each one
        for policy_file in $(echo ${{ github.event.inputs.policy_file }} | tr ',' '\n'); do
          cp "policies/$policy_file" build/
        done
        ls -alrt ./build
        cat ./build/*.xml
        pwd
      shell: bash
